// Code generated by mlflow/go/cmd/generate/main.go. DO NOT EDIT.

package service

import (
	"context"
	"github.com/mlflow/mlflow-go-backend/pkg/protos"
	"github.com/mlflow/mlflow-go-backend/pkg/contract"
)

type ModelRegistryService interface {
	contract.Destroyer
	CreateRegisteredModel(ctx context.Context, input *protos.CreateRegisteredModel) (*protos.CreateRegisteredModel_Response, *contract.Error)
	RenameRegisteredModel(ctx context.Context, input *protos.RenameRegisteredModel) (*protos.RenameRegisteredModel_Response, *contract.Error)
	UpdateRegisteredModel(ctx context.Context, input *protos.UpdateRegisteredModel) (*protos.UpdateRegisteredModel_Response, *contract.Error)
	DeleteRegisteredModel(ctx context.Context, input *protos.DeleteRegisteredModel) (*protos.DeleteRegisteredModel_Response, *contract.Error)
	GetRegisteredModel(ctx context.Context, input *protos.GetRegisteredModel) (*protos.GetRegisteredModel_Response, *contract.Error)
	GetLatestVersions(ctx context.Context, input *protos.GetLatestVersions) (*protos.GetLatestVersions_Response, *contract.Error)
	CreateModelVersion(ctx context.Context, input *protos.CreateModelVersion) (*protos.CreateModelVersion_Response, *contract.Error)
	UpdateModelVersion(ctx context.Context, input *protos.UpdateModelVersion) (*protos.UpdateModelVersion_Response, *contract.Error)
	TransitionModelVersionStage(ctx context.Context, input *protos.TransitionModelVersionStage) (*protos.TransitionModelVersionStage_Response, *contract.Error)
	DeleteModelVersion(ctx context.Context, input *protos.DeleteModelVersion) (*protos.DeleteModelVersion_Response, *contract.Error)
	GetModelVersion(ctx context.Context, input *protos.GetModelVersion) (*protos.GetModelVersion_Response, *contract.Error)
	GetModelVersionDownloadUri(ctx context.Context, input *protos.GetModelVersionDownloadUri) (*protos.GetModelVersionDownloadUri_Response, *contract.Error)
	SetRegisteredModelTag(ctx context.Context, input *protos.SetRegisteredModelTag) (*protos.SetRegisteredModelTag_Response, *contract.Error)
	SetModelVersionTag(ctx context.Context, input *protos.SetModelVersionTag) (*protos.SetModelVersionTag_Response, *contract.Error)
	DeleteRegisteredModelTag(ctx context.Context, input *protos.DeleteRegisteredModelTag) (*protos.DeleteRegisteredModelTag_Response, *contract.Error)
	DeleteModelVersionTag(ctx context.Context, input *protos.DeleteModelVersionTag) (*protos.DeleteModelVersionTag_Response, *contract.Error)
	SetRegisteredModelAlias(ctx context.Context, input *protos.SetRegisteredModelAlias) (*protos.SetRegisteredModelAlias_Response, *contract.Error)
	DeleteRegisteredModelAlias(ctx context.Context, input *protos.DeleteRegisteredModelAlias) (*protos.DeleteRegisteredModelAlias_Response, *contract.Error)
	GetModelVersionByAlias(ctx context.Context, input *protos.GetModelVersionByAlias) (*protos.GetModelVersionByAlias_Response, *contract.Error)
}
